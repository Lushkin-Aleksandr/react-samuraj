{"version":3,"file":"static/js/442.5143731b.chunk.js","mappings":"wLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAAyK,sBAAzK,EAAwM,wBAAxM,EAAiP,gCAAjP,EAA4R,0BAA5R,EAAgU,yBAAhU,EAAwW,8BAAxW,EAAmZ,4BAAnZ,EAAoc,oC,mBCgBpc,EAbmB,SAACA,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,gBAAKC,UAAS,UAAKC,GAAnB,UAEI,UAAC,KAAD,CAASC,GAAIJ,EAAME,UAAW,SAAAG,GAAO,OAAIA,EAAQC,SAAR,UAAsBH,EAAtB,YAAkCA,GAAWA,GAAtF,WACI,gBAAKD,UAAWC,EAAUI,IAAI,wDAAwDC,IAAI,KACzFT,EAAMU,WCGvB,EAXgB,SAACV,GAEb,OACI,gBAAKG,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAhB,SACKJ,EAAMW,a,iDCFjBC,GAAcC,EAAAA,EAAAA,GAAiB,IAkB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,wBADkBD,EAdL,SAACf,GACpB,OACI,kBAAMiB,SAAUjB,EAAMkB,aAAcf,UAAWC,EAA/C,WACI,SAACe,EAAA,EAAD,CACIhB,UAAWC,EACXgB,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,GACrBF,KAAM,iBACNc,YAAa,wBACjB,kDAkBZ,EATmB,SAACxB,GAIhB,OACI,SAACc,EAAD,CAAqBG,SAJL,SAACQ,GACjBzB,EAAM0B,WAAWD,EAASE,oBCQlC,EA9BgB,SAAC3B,GAGb,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYvB,KAAMuB,EAAOvB,KAAMR,GAAI+B,EAAO/B,QAC5FgC,EAAmBN,EAAMO,aAAaH,KAAI,SAAArB,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,aAGnF,OAAKX,EAAMoC,QAIP,iBAAKjC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK0B,KAEL,iBAAK3B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK8B,KAEL,SAAC,EAAD,CAAYR,WAAY1B,EAAM0B,oBAZhB,SAAC,KAAD,CAAUrB,GAAI,Y,mBCO5C,GAAegC,E,QAAAA,KACXC,EAAAA,EAAAA,KAjBkB,SAACV,GAEnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACU,GACtB,MAAO,CACHb,WADG,SACQC,GACPY,GAASC,EAAAA,EAAAA,GAAwBb,SAQzCc,EAAAA,EAFJ,CAGEC","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessage.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__iTu7f\",\"dialogsItems\":\"Dialogs_dialogsItems__TbCfQ\",\"dialog\":\"Dialogs_dialog__-BmHP\",\"active\":\"Dialogs_active__AxAac\",\"link\":\"Dialogs_link__u9y90\",\"avatar\":\"Dialogs_avatar__XKkf9\",\"messageWrapper\":\"Dialogs_messageWrapper__OCmST\",\"messages\":\"Dialogs_messages__+b-W2\",\"message\":\"Dialogs_message__CVPkm\",\"messageInner\":\"Dialogs_messageInner__dewDJ\",\"addMessage\":\"Dialogs_addMessage__B4caB\",\"addMessageTextarea\":\"Dialogs_addMessageTextarea__MmIK0\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={`${s.dialog}`}>\r\n\r\n            <NavLink to={path} className={navData => navData.isActive ? `${s.active} ${s.link}` : s.link}>\r\n                <img className={s.avatar} src=\"https://cdn-icons-png.flaticon.com/512/147/147144.png\" alt=\"\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.messageInner}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import s from \"./Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.addMessage}>\r\n            <Field\r\n                className={s.addMessageTextarea}\r\n                component={Textarea}\r\n                validate={[required, maxLength50]}\r\n                name={'newMessageText'}\r\n                placeholder={'Enter your message'}/>\r\n            <button>Add message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nconst AddMessage = (props) => {\r\n    let addNewMessage = (formData) => {\r\n        props.addMessage(formData.newMessageText)\r\n    }\r\n    return (\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    )\r\n}\r\n\r\nexport default AddMessage;","import s from './Dialogs.module.css';\r\nimport React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport AddMessage from \"./AddMessage\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message}/>)\r\n\r\n    // Редирект на страницу логина если не авторизован\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messageWrapper}>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessage addMessage={props.addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage(newMessageText) {\r\n            dispatch(addMessageActionCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","className","s","to","navData","isActive","src","alt","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","formData","addMessage","newMessageText","state","dialogsPage","dialogsElements","dialogsData","map","dialog","messagesElements","messagesData","isAuth","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}