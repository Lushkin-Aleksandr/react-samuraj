{"version":3,"file":"static/js/265.4e5c7b38.chunk.js","mappings":"mPACA,EAAoF,sCAApF,EAAqI,8BAArI,EAA+K,+BAA/K,EAA2N,gCAA3N,EAA2Q,mC,mBC8C3Q,EA3C+B,SAACA,GAC5B,OAA+BC,EAAAA,EAAAA,WAAS,GAAxC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA2BF,EAAAA,EAAAA,UAASD,EAAMI,QAA1C,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,4BACMF,IACF,4BACI,kCADJ,MACmB,iBAAMK,cAjBR,WACrBJ,GAAY,IAgBW,SAAwCH,EAAMI,QAAU,aAG1EF,IACD,0BACI,kBACIM,SAdO,SAAAC,GACnBJ,EAAUI,EAAEC,cAAcC,QAcdC,OApBW,WACvBT,GAAY,GACZH,EAAMa,aAAaT,IAmBPO,MAAOP,EACPU,WAAS,U,6BCU7B,GAF6BC,EAAAA,EAAAA,GAAU,CAACC,KAAM,gBAAjBD,EAtCL,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAE7C,OACI,kBAAMC,SAAUH,EAAhB,WACI,0BAAK,uCACJE,IAAS,gBAAKE,UAAWC,EAAAA,EAAAA,iBAAhB,SACLH,KAEL,4BACI,sCACCI,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAE9C,4BACI,6CADJ,KAEKD,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAACC,KAAM,iBAEzD,4BACI,kDADJ,KAEKF,EAAAA,EAAAA,IAAY,yBAA0B,4BAA6B,GAAIG,EAAAA,QAE5E,4BACI,oCADJ,KAEKH,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAIG,EAAAA,QAE5C,4BACI,oCADJ,KACsBC,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GACpD,OACI,iBAAeV,UAAWW,EAA1B,WACI,uBAAID,KACHR,EAAAA,EAAAA,IAAYQ,EAAK,YAAcA,EAAK,GAAIP,EAAAA,MAFnCO,eCKxBE,EAAc,SAAC,GAAsC,IAArCf,EAAoC,EAApCA,QAASgB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACpC,OACI,2BACKD,IAAW,0BACR,mBAAQE,QAASD,EAAjB,6BAEJ,0BACI,cAAGd,UAAWW,EAAd,SAAgCd,EAAQmB,cAE5C,4BACI,6CADJ,KAC+BnB,EAAQoB,eAAiB,MAAQ,QAE/DpB,EAAQoB,iBAAkB,4BACvB,kDADuB,KACSpB,EAAQqB,8BAE5C,4BACI,oCADJ,KACsBrB,EAAQsB,YAE9B,4BACI,oCADJ,KACsBb,OAAOC,KAAKV,EAAQW,UAAUC,KAAI,SAAAC,GACpD,OAAO,SAACU,EAAD,CAAmBC,aAAcX,EAAKY,aAAczB,EAAQW,SAASE,IAAvDA,aAQ/BU,EAAU,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OACI,0BACI,iBAAKtB,UAAWW,EAAhB,WAAsC,uBAAIU,IAA1C,KAA8DC,QAK1E,EAtEoB,SAAC,GAAsE,IAArEzB,EAAoE,EAApEA,QAASd,EAA2D,EAA3DA,OAAQS,EAAmD,EAAnDA,aAAcqB,EAAqC,EAArCA,QAASU,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAErE,GAA8B5C,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KAeA,OACI,0BACI,iBAAKkB,UAAWW,EAAhB,WACI,gBAAKX,UAAWW,EAAkBc,IAAK5B,EAAQ6B,OAAOC,OAASC,IAC9Df,IAAW,kBAAOb,UAAWW,EAAmBP,KAAM,OAAQjB,SAjB/C,SAACC,GACrBA,EAAEyC,OAAOC,MAAMC,QACfR,EAAUnC,EAAEyC,OAAOC,MAAM,OAiBpBjD,GACK,SAAC,EAAD,CAAsBmD,cAAenC,EAASA,QAASA,EAASE,SAbjE,SAACkC,GACdT,EAAYS,GAAUC,MAAK,WACvBpD,GAAY,UAYF,SAAC8B,EAAD,CAAaE,aAAc,kBAAMhC,GAAY,IAAOe,QAASA,EAASgB,QAASA,KAGrF,SAAC,EAAD,CAAwB9B,OAAQA,EAAQS,aAAcA,U,UCjCtE,GAAgB,WAAa,4BAA4B,WAAa,4BAA4B,QAAU,0BCA5G,EAAuB,mBCcvB,EAZa,SAACb,GACV,OACI,0BACI,iBAAKqB,UAAWmC,EAAhB,WACI,gBAAKV,IAAI,wDAAwDW,IAAI,KACpEzD,EAAM0D,SACP,0BAAK,4BAAO1D,EAAM2D,WAAb,oB,oBCHfC,GAAcC,EAAAA,EAAAA,GAAiB,IAmB/BC,GAAmB/C,EAAAA,EAAAA,GAAU,CAACC,KAAM,eAAjBD,EAjBL,SAACf,GACjB,OACI,kBAAMoB,SAAUpB,EAAMiB,aAAcI,UAAWmC,EAAAA,QAA/C,WACI,0BACI,SAACO,EAAA,EAAD,CACIC,KAAM,UACNC,YAAa,eACbC,UAAWxC,EAAAA,GACXyC,SAAU,CAACC,EAAAA,EAAUR,QAE7B,0BACI,iDAiBhB,EATgB,SAAC5D,GAIb,OACI,SAAC8D,EAAD,CAAkB1C,SAJH,SAACkC,GAChBtD,EAAMqE,QAAQf,EAASgB,aCR/B,MAfA,SAAiBtE,GACb,IAAIuE,EAAgBvE,EAAMwE,MAAM1C,KAAI,SAAA2C,GAAI,OAAI,SAAC,EAAD,CAAoBf,QAASe,EAAKf,QAASC,WAAYc,EAAKd,YAAjDc,EAAKC,OAG5D,OACI,iBAAKrD,UAAWmC,EAAAA,WAAhB,WACI,eAAInC,UAAWmC,EAAAA,WAAf,uBACA,SAAC,EAAD,CAASa,QAASrE,EAAMqE,WACxB,gBAAKhD,UAAWmC,EAAAA,MAAhB,SACKe,QCYjB,GAHyBI,EAAAA,EAAAA,KAhBH,SAACC,GAEnB,MAAO,CACHJ,MAAOI,EAAMC,YAAYC,cAIR,SAACC,GACtB,MAAO,CACHV,QAAS,SAACW,GACND,GAASE,EAAAA,EAAAA,IAAqBD,QAMjBL,CAA6CO,G,UCAtE,MAjBA,SAAiBlF,GAEb,OAAKA,EAAMkB,SAEP,4BACI,SAAC,EAAD,CACIA,QAASlB,EAAMkB,QACfgB,QAASlC,EAAMkC,QACf9B,OAAQJ,EAAMI,OACdS,aAAcb,EAAMa,aACpBgC,YAAa7C,EAAM6C,YACnBD,UAAW5C,EAAM4C,aACrB,SAAC,EAAD,QAVmB,SAACuC,EAAA,EAAD,K,8BCAzBC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WA0CD,OA1CCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MAEF,WACI,IAAIC,EAASC,KAAKtF,MAAMuF,OAAOC,OAAOH,OACjCA,IACDA,EAASC,KAAKtF,MAAMyF,kBAKxBH,KAAKtF,MAAM0F,eAAeL,GAC1BC,KAAKtF,MAAM2F,UAAUN,KACxB,+BAED,WACIC,KAAKM,mBAER,gCAGD,SAAmBC,EAAWC,EAAWC,GACjCF,EAAUN,OAAOC,OAAOH,SAAWC,KAAKtF,MAAMuF,OAAOC,OAAOH,QAC5DC,KAAKM,mBAIZ,oBAGD,WAGI,OACI,SAAC,GAAD,kBACQN,KAAKtF,OADb,IAEIkC,SAAUoD,KAAKtF,MAAMuF,OAAOC,OAAOH,OACnCnE,QAASoE,KAAKtF,MAAMkB,QACpBd,OAAQkF,KAAKtF,MAAMI,OACnBS,aAAcyE,KAAKtF,MAAMa,aACzBgC,YAAayC,KAAKtF,MAAM6C,YACxBD,UAAW0C,KAAKtF,MAAM4C,iBAEjC,EA1CCwC,CAAyBY,EAAAA,WAuD/B,GAAeC,EAAAA,EAAAA,KACXtB,EAAAA,EAAAA,KAXkB,SAACC,GACnB,MAAO,CACH1D,QAAS0D,EAAMC,YAAY3D,QAC3Bd,OAAQwE,EAAMC,YAAYzE,OAC1BqF,iBAAkBb,EAAMsB,KAAKb,OAC7Bc,OAAQvB,EAAMsB,KAAKC,UAME,CAACT,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW9E,aAAAA,EAAAA,GAAc+B,UAAAA,EAAAA,GAAWC,YAAAA,EAAAA,KAC9EuD,EAAAA,EACAC,EAAAA,EAHJ,CAIEjB","sources":["webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPost.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wallpaperImg\":\"ProfileInfo_wallpaperImg__j6lHU\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__f048W\",\"fullName\":\"ProfileInfo_fullName__FYKBG\",\"mainPhoto\":\"ProfileInfo_mainPhoto__-ex13\",\"uploadFile\":\"ProfileInfo_uploadFile__o3Lvu\",\"contactsItems\":\"ProfileInfo_contactsItems__SRLzu\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode]  = useState(false);\r\n    let [status, setStatus]  = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    onBlur={deActivateEditMode}\r\n                    value={status}\r\n                    autoFocus/>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport formControlsStyles from '../../common/FormsControls/FormsControls.module.css'\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>save</button></div>\r\n            {error && <div className={formControlsStyles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>\r\n                {createField('Full Name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return (\r\n                    <div key={key} className={styles.contactsItems}>\r\n                        <b>{key}</b>\r\n                        {createField(key, 'contacts.' + key, [], Input)}\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormRedux;","import React, {useState} from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\nimport avatarImage from '../../../assets/images/avatar.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataFormRedux from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img className={styles.mainPhoto} src={profile.photos.large || avatarImage}/>\r\n                {isOwner && <input className={styles.uploadFile} type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditmode={() => setEditMode(true)} profile={profile} isOwner={isOwner}/>}\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditmode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditmode}>Edit profile</button>\r\n            </div>}\r\n            <div>\r\n                <p className={styles.fullName}>{profile.fullName}</p>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob && <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>}\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.contactsItems}><b>{contactTitle}</b>: {contactValue}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Mw8xw\",\"headerText\":\"MyPosts_headerText__KLwFT\",\"addPost\":\"MyPosts_addPost__3mtHy\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__QGgmq\"};","import s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src=\"https://cdn-icons-png.flaticon.com/512/147/147144.png\" alt=\"\"/>\r\n                {props.message}\r\n                <div><span>{props.likesCount} Likes</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.addPost}>\r\n            <div>\r\n                <Field\r\n                    name={'newPost'}\r\n                    placeholder={'Post message'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'addPostForm'})(AddPostForm)\r\n\r\nconst AddPost = (props) => {\r\n    const addNewPost = (formData) => {\r\n        props.addPost(formData.newPost);\r\n    }\r\n    return (\r\n        <AddPostFormRedux onSubmit={addNewPost}/>\r\n    );\r\n};\r\n\r\nexport default AddPost;","import s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport AddPost from \"./AddPost\";\r\n\r\n\r\nfunction MyPosts(props) {\r\n    let postsElements = props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>)\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.headerText}>My posts</h3>\r\n            <AddPost addPost={props.addPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css';\r\nimport React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n    if (!props.profile) return <Preloader/>\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                isOwner={props.isOwner}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                saveProfile={props.saveProfile}\r\n                savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport withRouter from \"../../hoc/withRouter\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId) {\r\n\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.router.params.userId !== this.props.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.router.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                saveProfile={this.props.saveProfile}\r\n                savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorisedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","formControlsStyles","createField","Input","type","Textarea","Object","keys","contacts","map","key","styles","ProfileData","isOwner","goToEditmode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","src","photos","large","avatarImage","target","files","length","initialValues","formData","then","s","alt","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","Field","name","placeholder","component","validate","required","addPost","newPost","postsElements","posts","post","id","connect","state","profilePage","postsData","dispatch","newPostText","addPostActionCreator","MyPosts","Preloader","ProfileContainer","userId","this","router","params","authorisedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","auth","isAuth","withRouter","withAuthRedirect"],"sourceRoot":""}